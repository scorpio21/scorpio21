import random
import requests
from datetime import datetime

# Lista de frases
frases = [
    "¬°No campees, enfrent√° como gamer!",
    "Gan√°s experiencia hasta cuando perd√©s.",
    "Respawne√° con m√°s ganas.",
    "¬øLag? Nah, habilidad pura.",
    "Un d√≠a sin bugs es un milagro.",
    "Guard√° antes de probar algo loco.",
    "Jug√° como si fuera tu √∫ltima vida.",
    "AFK solo si es urgente üòé",
    "Todo gamer sabe: primero loote√°s, despu√©s pens√°s.",
    "Sub√≠ de nivel hasta en la vida real."
]

# Elegir frase y Pok√©mon aleatorio
frase = random.choice(frases)
pokemon_number = random.randint(1, 649)  # Hasta generaci√≥n 5 con animaciones

# Obtener datos del Pok√©mon desde la Pok√©API
pokemon_data = requests.get(f"https://pokeapi.co/api/v2/pokemon/{pokemon_number}").json()
pokemon_name = pokemon_data['name'].capitalize()
pokemon_types = [t['type']['name'].capitalize() for t in pokemon_data['types']]
pokemon_types_str = ', '.join(pokemon_types)

# URL del GIF animado del Pok√©mon
pokemon_url = f"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/showdown/{pokemon_number}.gif"

# Descargar GIF
output_path = "output/pokemon.gif"
response = requests.get(pokemon_url)
if response.status_code == 200:
    with open(output_path, "wb") as f:
        f.write(response.content)
else:
    print(f"No se pudo descargar el GIF del Pok√©mon #{pokemon_number}")

# Actualizar README
with open("README.md", "r", encoding="utf-8") as f:
    contenido = f.read()

# Actualizar la secci√≥n del Pok√©mon
pokemon_section = f"""
### üê±‚Äçüë§ Pok√©mon del d√≠a

![Pok√©mon del d√≠a](https://raw.githubusercontent.com/scorpio21/scorpio21/main/output/pokemon.gif)

**Nombre:** {pokemon_name}  
**Tipo(s):** {pokemon_types_str}
"""
contenido = contenido.split("<!-- POKEMON_INFO -->")[0] + \
    f"<!-- POKEMON_INFO -->\n{pokemon_section}\n<!-- /POKEMON_INFO -->" + \
    contenido.split("<!-- /POKEMON_INFO -->")[1]

# Actualizar la frase gamer
contenido = contenido.split("<!-- FRASE_GAMER -->")[0] + \
    f"<!-- FRASE_GAMER -->\nüïπÔ∏è {frase}\n<!-- /FRASE_GAMER -->" + \
    contenido.split("<!-- /FRASE_GAMER -->")[1]

# Actualizar la marca de tiempo
ahora = datetime.now().isoformat()
contenido = "\n".join([
    line if not line.strip().startswith("<!-- √öltima actualizaci√≥n:") else f"<!-- √öltima actualizaci√≥n: {ahora} -->"
    for line in contenido.splitlines()
])

# Escribir cambios
with open("README.md", "w", encoding="utf-8") as f:
    f.write(contenido)
